#!/bin/bash
# $Id: archive,v 1.66 2016/02/15 17:34:34 fulford Exp fulford $
# $Source: /src/merlin/usr/local/etc/RCS/archive,v $
# $Revision: 1.66 $
# Author C W Fulford.
# Copyright 2014 (c) C W Fulford. 
# Licensed for public use under the GPL.
# For assistance contact fulford@fulford.net 0709 229 5385
###################################################################
cmd=`basename $0`
syntax="$cmd [-c <config>] [-d(debug)] [-v(erbose)] [-z(ip)] <host_name>|-V"
ver=`echo "$Id: archive,v 1.66 2016/02/15 17:34:34 fulford Exp fulford $"|awk '{print $3,$4,$5}'`
while [ $# -gt 0 ] ;do
	case $1 in 
		-c) config=$2;shift 2;;
		-d) debug=1;set -x;shift;;
		-l) log=:;shift;;
		-t) mode=test;shift;;
		-v) verbose=1;shift;;
		-V) echo "$cmd $ver";exit;;
		-z) zip=y;shift;;
		 *) host=$1;shift ;;
	esac
done
config=${config:-"/usr/local/etc/archive.cf"}
[ -z "$host" ]&&{ echo "$cmd: host name required" >&2 ;exit 1 ;}
[ $host != `hostname` ] && { remote="ssh $host";bs="bs=8192" ;}
tmp=/tmp/$cmd-$$
verbose=${verbose:-0}
[ "$log" ] && logger -t archive: "$cmd on $host started"
if [ -r $config ];then
	sed -ne '/^'$host':/,/^$/{
		/^[	 ].*/,/^$/p
	}' $config >$tmp
	. $tmp
	[ $verbose -eq 1 ] && cat $tmp
else
	echo "$cmd: Can't read $config" >&2
	exit 1
fi

_end () {
	if [ $r -lt 1 ];then
		rm $tmp
		[ "$log" ] && logger -t archive: "$cmd on $host finished"
	else
		[ "$log" ] && logger -t archive: "$cmd on $host failed"
		echo "$cmd on $host failed" >&2
	fi

}

[ -z "$dest" ] &&{ echo "$cmd: no tape device specified for $host">&2;exit 1;}
[ -e "$dest" ] ||{ echo "$cmd: $dest does not exist">&2;exit 1;}
[ -z "$backup" ] &&{ echo "$cmd: no command specified for $host">&2;exit 1;}
if sudo [ ! -w $dest ];then
	echo "$backup: Can't write to $dest">&2 ;_end
fi

method=`echo $backup|awk '{print $1}'`

case $method in	
   tar) $remote df -l|awk 'NR > 1{if($1 !~ /tmpfs/) print $6}'>$tmp
	n=`cat $tmp|wc -l` 
	c=0
	while [ $c -le $n ];do
		c=`expr $c + 1`
		fss="$fss `awk <$tmp -v c=$c 'NR == c{print}'`"
	done
	for fs in $fss ;do
		fn=`basename $fs`
		[ $fn = "/" ] && fn=root
		archive=${fn}.`date +%u`.tar
		[ $verbose -eq 1 ] && {
			echo "$cmd: file system $fn to $archive"
		}
		[ "$mode" = "test" ] &&{ echo=echo ;}
		if [ -n "$remote" ];then 
		      $remote "sudo $tar - $fs 2>/dev/null|gzip -c|dd bs=8192"|
		      sudo dd of=$dest/$archive.gz
		else
			if [ "$zip" = "y" ];then 
				sudo $backup - $fs 2>/dev/null|sudo gzip|
				sudo dd of=$dest/$archive.gz 2>/dev/null
				r=$?
			else
				sudo $backup - $fs 2>/dev/null|
					dd of=$dest/$archive 2>/dev/null
					r=$?
			fi
		fi
	done
	;;
   lftp)
	[ $verbose -gt 0 ] && {
		echo "$cmd using $backup to mirror $host to $src" >&2
	}
	$backup -u $user,$pass $host -e "mirror --only-newer $src $dest;quit"
	;;

esac
_end
